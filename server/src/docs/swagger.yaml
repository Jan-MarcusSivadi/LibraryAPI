openapi: 3.0.2
info:
    title: Library-API
    version: 1.0.0
    description: '### This is a Swagger UI for our Library API'
paths:
    /users:
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of users:
                                    value:
                                        -
                                            id: 1
                                            username: bigbezos420
                                        -
                                            id: 2
                                            username: markzuckofficial
                    description: Returns list of users
            summary: Get list of users
            description: Returns list of all users
        post:
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            type: string
                        examples:
                            User:
                                value:
                                    id: 1
                                    firstname: Jeff
                                    lastname: Bezos
                                    email: jeffbezos@amazon.com
                                    password: markzuckerbergsux
                                    username: bigbezos420
                                    phonenr: +1 11748794
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                User created:
                                    value:
                                        id: 1
                                        firstname: Jeff
                                        lastname: Bezos
                                        email: jeffbezos@amazon.com
                                        password: markzuckerbergsux
                                        username: bigbezos420
                                        phonenr: +1 11748794
                    description: User created
            summary: Add new user
            description: |
                Returns created user
    /books:
        get:
            tags:
                - books
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/book'
                            examples:
                                List of books:
                                    value:
                                        -
                                            id: 1
                                            title: Romeo and Juliet
                                            author: William Shakespeare
                                            description: >-
                                                Romeo and Juliet, play by William Shakespeare, written about
                                                1594â€“96 and first published in an unauthorized quarto in 1597.
                                                An authorized quarto appeared in 1599, substantially longer
                                                and more reliable.
                                            releasedate: '1597'
                                            booklength: 480
                                            language: English
                                            price: 5.99
                                        -
                                            id: 2
                                            title: 'Moby Dick; Or, The Whale'
                                            author: Herman Melville
                                            description: >-
                                                Moby-Dick; or, The Whale is an 1851 novel by American writer
                                                Herman Melville. The book is the sailor Ishmael's narrative of
                                                the maniacal quest of Ahab, captain of the whaling ship
                                                Pequod, for vengeance against Moby Dick, the giant white sperm
                                                whale that bit off his leg on the ship's previous voyage.
                                            releasedate: '1851'
                                            booklength: 378
                                            language: English
                                            price: 4.99
                                        -
                                            id: 3
                                            title: A Room with a View
                                            author: E. M. Forster
                                            description: >-
                                                A Room with a View follows Lucy Honeychurch as she fights
                                                against her society in search for both, independence and love.
                                                While she first believes these two to be mutually exclusive,
                                                she realizes that, in George Emerson, she can have both.
                                            releasedate: '1908'
                                            booklength: 321
                                            language: English
                                            price: 3.99
                    description: >-
                        Returns an array of Books (id, title, author, description, releasedate, booklength,
                        language, price)
            summary: Get list of books
            description: Returns an array of Books
        post:
            requestBody:
                description: example request body data
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/book'
                        examples:
                            example request body data:
                                value:
                                    title: Middlemarch
                                    author: George Eliot
                                    description: >-
                                        Middlemarch is a novel that explores the dynamics of marriage and
                                        social class in 19th-century England. A large web of characters,
                                        including the main stories of Dorothea Brooke and Dr. Lydgate,
                                        intersect with a number of related plotlines.
                                    releasedate: '1871'
                                    booklength: '880'
                                    language: English
                                    price: '3.99'
                            example invalid request body data:
                                value:
                                    title: Middlemarch
                required: true
            tags:
                - books
            responses:
                '201':
                    headers:
                        Location:
                            schema:
                                type: string
                            examples:
                                Location of Book:
                                    value: 'http://localhost:3000/books/4'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/book'
                            examples:
                                Create new Book:
                                    value:
                                        id: 4
                                        title: Middlemarch
                                        author: George Eliot
                                        description: >-
                                            Middlemarch is a novel that explores the dynamics of marriage and
                                            social class in 19th-century England. A large web of characters,
                                            including the main stories of Dorothea Brooke and Dr. Lydgate,
                                            intersect with a number of related plotlines.
                                        releasedate: '1871-01-01T00:00:00.000Z'
                                        booklength: '880'
                                        language: English
                                        price: '3.99'
                                        updatedAt: '2023-10-30T15:55:30.397Z'
                                        createdAt: '2023-10-30T15:55:30.397Z'
                    description: >-
                        Returns created Book (id, title, author, description, releasedate, booklength,
                        language, price, updatedAt, createdAt)
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                One or all required parameters are missing:
                                    value:
                                        error: One or all required parameters are missing.
                    description: One or all required parameters are missing
            summary: Add new Book
            description: Returns created Book
    '/users/{id}':
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                User:
                                    value:
                                        id: 1
                                        firstname: Jeff
                                        lastname: Bezos
                                        email: jeffbezos@amazon.com
                                        password: markzuckerbergsux
                                        username: bigbezos420
                                        phonenr: +1 11748794
                    description: Returns user
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: User not found
            operationId: id
            summary: Get details of a user
            description: Returns details of user
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                        examples:
                            example:
                                value:
                                    firstname: updated
                                    lastname: updated
                                    email: jeffbezos@amazon.com
                                    password: markzuckerbergsux
                                    username: updated
                                    phonenr: '+1 11748794 '
            tags:
                - users
            responses:
                '202':
                    content:
                        application/json:
                            schema:
                                type: string
                            examples:
                                Update:
                                    value:
                                        id: 1
                                        firstname: updated
                                        lastname: Bezos
                                        email: jeffbezos@amazon.com
                                        password: markzuckerbergsux
                                        username: bigbezos420
                                        phonenr: '+1 11748794 '
                    description: Update user details
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: User not found
            summary: Update details of a user
            description: Updates details of user
        delete:
            tags:
                - users
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: User gets deleted
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                    description: User not found
            summary: Delete user
            description: Deletes user from database
        parameters:
            -
                examples:
                    '1':
                        value: '1'
                name: id
                schema:
                    type: integer
                in: path
                required: true
    '/books/{id}':
        get:
            tags:
                - books
            parameters:
                -
                    examples:
                        id:
                            value: '1'
                    name: id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/book'
                            examples:
                                Book:
                                    value:
                                        id: 1
                                        title: Title1
                                        description: >-
                                            Romeo and Juliet, play by William Shakespeare, written about
                                            1594â€“96 and first published in an unauthorized quarto in 1597. An
                                            authorized quarto appeared in 1599, substantially longer and more
                                            reliable.
                                        author: William Shakespeare2
                                        releasedate: '1597-01-01T00:00:00.000Z'
                                        language: English
                                        booklength: 480
                                        price: 5.99
                                        createdAt: '2023-10-24T18:55:57.000Z'
                                        updatedAt: '2023-10-26T11:46:19.000Z'
                    description: >-
                        Returns book by id (id, title, author, description, releasedate, booklength, language,
                        price, createdAt, updatedAt)
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not found.:
                                    value:
                                        error: book not found.
                    description: Returns error
            summary: Get one book
            description: Returns book by id
        put:
            requestBody:
                description: example request body data
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/book'
                        examples:
                            example request body data:
                                value:
                                    title: Middlemarch 2
                                    author: Eliot
                                    description: >-
                                        Middlemarch is a novel that explores the dynamics of marriage and
                                        social class in 19th-century England.
                                    price: 3.95
                            example invalid request body data:
                                value: {}
                required: true
            tags:
                - books
            parameters:
                -
                    examples:
                        id:
                            value: '4'
                    name: id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    headers:
                        Location:
                            schema:
                                type: string
                            examples:
                                Location of book:
                                    value: 'http://localhost:3000/books/4'
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                field is required:
                                    value:
                                        error: At least one field is required.
                    description: some fields are missing
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not found:
                                    value:
                                        error: book not found.
                    description: book not found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Update failed:
                                    value:
                                        error: could not update book
                    description: Internal server error
            summary: Update book
            description: Updates book by id
        delete:
            tags:
                - books
            parameters:
                -
                    examples:
                        id:
                            value: '4'
                    name: id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: No content
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Book not found.:
                                    value:
                                        error: book not found.
                    description: Book not found
            summary: Delete book by id
            description: Deletes book using its id
    /orders:
        get:
            tags:
                - orders
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/order'
                            examples:
                                all orders:
                                    value:
                                        -
                                            id: 1
                                            ordernr: ORDER-472417
                                            rentaldate: '2023-10-30'
                                            returndate: '2023-11-04'
                                            UserId: 1
                                            createdAt: '2023-10-30T17:53:13.000Z'
                                            updatedAt: '2023-10-30T17:53:13.000Z'
                                            OrderItems:
                                                -
                                                    id: 1
                                                    OrderId: 1
                                                    BookId: 1
                                                    createdAt: '2023-10-30T17:53:13.000Z'
                                                    updatedAt: '2023-10-30T17:53:13.000Z'
                                                -
                                                    id: 2
                                                    OrderId: 1
                                                    BookId: 2
                                                    createdAt: '2023-10-30T17:53:13.000Z'
                                                    updatedAt: '2023-10-30T17:53:13.000Z'
                                                -
                                                    id: 3
                                                    OrderId: 1
                                                    BookId: 3
                                                    createdAt: '2023-10-30T17:53:13.000Z'
                                                    updatedAt: '2023-10-30T17:53:13.000Z'
                                        -
                                            id: 2
                                            ordernr: ORDER-477870
                                            rentaldate: '2023-10-30'
                                            returndate: '2023-11-04'
                                            UserId: 2
                                            createdAt: '2023-10-30T17:59:41.000Z'
                                            updatedAt: '2023-10-30T17:59:41.000Z'
                                            OrderItems:
                                                -
                                                    id: 4
                                                    OrderId: 2
                                                    BookId: 2
                                                    createdAt: '2023-10-30T17:59:41.000Z'
                                                    updatedAt: '2023-10-30T17:59:41.000Z'
                                                -
                                                    id: 5
                                                    OrderId: 2
                                                    BookId: 1
                                                    createdAt: '2023-10-30T17:59:41.000Z'
                                                    updatedAt: '2023-10-30T17:59:41.000Z'
                    description: >-
                        Returns an array of Orders (id, ordernr, rentaldate, returndate, UserId, createdAt,
                        updatedAt, OrderItems)
            summary: Get list of orders
            description: Returns an array of Orders
        post:
            requestBody:
                description: example request body
                content:
                    application/json:
                        examples:
                            example request body:
                                value:
                                    bookIds:
                                        - 1
                                        - 2
                                        - 3
                                    userId: 1
                required: true
            tags:
                - orders
            responses:
                '201':
                    headers:
                        Location:
                            schema:
                                type: string
                            examples:
                                Location of order:
                                    value: 'http://localhost:3000/orders/1'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                            examples:
                                Create new Order:
                                    value:
                                        id: 1
                                        ordernr: ORDER-472417
                                        rentaldate: '2023-10-30'
                                        returndate: '2023-11-04'
                                        UserId: 1
                                        updatedAt: '2023-10-30T17:53:13.008Z'
                                        createdAt: '2023-10-30T17:53:13.008Z'
                    description: >-
                        Returns created Order (id, ordernr, rentaldate, returndate, UserId, updatedAt,
                        createdAt)
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                One or all required parameters are missing:
                                    value:
                                        error: One or all required parameters are missing
                    description: One or all required parameters are missing
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                User not found.:
                                    value:
                                        error: User not found.
                                Some books could not be not found.:
                                    value:
                                        error: Some books could not be not found.
                                Book not found.:
                                    value:
                                        error: Book not found.
                                Some order items could not be deleted:
                                    value:
                                        error: Some order items could not be created
                    description: Not found
                '409':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Order already exists:
                                    value:
                                        error: Order already exists for user
                    description: Order already exists
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Could not create order:
                                    value:
                                        error: Could not create order
                    description: Could not create order
            summary: Add new Order
            description: Returns created Order
    '/orders/{id}':
        get:
            tags:
                - orders
            parameters:
                -
                    examples:
                        id:
                            value: '1'
                    name: id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    headers:
                        Location:
                            schema:
                                type: string
                            examples:
                                Location of order:
                                    value: 'http://localhost:3000/orders/1'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/order'
                            examples:
                                example order:
                                    value:
                                        id: 1
                                        ordernr: ORDER-545300
                                        rentaldate: '2023-10-24'
                                        returndate: '2023-10-29'
                                        UserId: 1
                                        createdAt: '2023-10-24T20:26:46.000Z'
                                        updatedAt: '2023-10-26T08:48:54.000Z'
                                        User:
                                            id: 1
                                            firstname: Big
                                            lastname: Bezos
                                            email: jeffbezos@amazon.com
                                            password: markzuckerbergsux
                                            username: bigbezos420
                                            phonenr: +1 11748794
                                            createdAt: '2023-10-26T08:48:44.000Z'
                                            updatedAt: '2023-10-26T08:48:44.000Z'
                                        OrderItems:
                                            -
                                                id: 4
                                                OrderId: 2
                                                BookId: 6
                                                createdAt: '2023-10-24T20:26:46.000Z'
                                                updatedAt: '2023-10-24T20:26:46.000Z'
                                                Book:
                                                    id: 6
                                                    title: Title this
                                                    author: William Shakespeare2
                                                    description: >-
                                                        Romeo and Juliet, play by William Shakespeare, written
                                                        about 1594â€“96 and first published in an unauthorized
                                                        quarto in 1597. An authorized quarto appeared in 1599,
                                                        substantially longer and more reliable.
                                                    releasedate: '1597-01-01T00:00:00.000Z'
                                                    booklength: 480
                                                    language: English
                                                    price: 11.99
                                                    createdAt: '2023-10-24T19:33:51.000Z'
                                                    updatedAt: '2023-10-24T19:33:51.000Z'
                    description: 'Returns order by id (id, ordernr, rentaldate, returndate, UserId, User, OrderItems)'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Not found.:
                                    value:
                                        error: order not found.
                    description: Returns error
            summary: Get one order
            description: Returns order by id
        put:
            requestBody:
                description: example request body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/order'
                        examples:
                            example request body:
                                value:
                                    ordernr: ORDER-1234
                                    rentaldate: '1987-05-02'
                                    returndate: '1987-05-12'
                                    UserId: 2
                            example invalid request body:
                                value: {}
                required: true
            tags:
                - orders
            parameters:
                -
                    examples:
                        id:
                            value: '1'
                    name: id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    headers:
                        Location:
                            schema:
                                type: string
                            examples:
                                Location of order:
                                    value: 'http://localhost:3000/orders/1'
                    description: OK
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                field is required:
                                    value:
                                        error: At least one field is required.
                    description: One or many fields are missing
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                order not found:
                                    value:
                                        error: order not found.
                                user not found:
                                    value:
                                        error: user not found.
                                could not update order:
                                    value:
                                        error: could not update order
                    description: Order does not exist
            summary: Update order
            description: Updates order by id
        delete:
            tags:
                - orders
            parameters:
                -
                    examples:
                        id:
                            value: '1'
                    name: id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: No content
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                order does not exist:
                                    value:
                                        error: Order not found.
                    description: Order not found
            summary: Delete order by id
            description: Deletes order using its id
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        user:
            title: Root Type for user
            description: ''
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                firstname:
                    type: string
                lastname:
                    type: string
                email:
                    type: string
                password:
                    type: string
                username:
                    type: string
                phonenr:
                    type: string
            example:
                id: 1
                firstname: Jeff
                lastname: Bezos
                email: jeffbezos@amazon.com
                password: markzuckerbergsux
                username: bigbezos420
                phonenr: +1 11748794
        book:
            title: Root Type for book
            description: book entity
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                title:
                    type: string
                author:
                    type: string
                description:
                    type: string
                releasedate:
                    type: string
                booklength:
                    format: int32
                    type: integer
                language:
                    type: string
                price:
                    format: double
                    type: number
                pdf:
                    type: string
            example:
                id: 1
                title: Romeo and Juliet
                author: William Shakespeare
                description: >-
                    Romeo and Juliet, play by William Shakespeare, written about 1594â€“96 and first published
                    in an unauthorized quarto in 1597. An authorized quarto appeared in 1599, substantially
                    longer and more reliable.
                releasedate: '1597'
                booklength: 480
                language: English
                price: 5.99
                pdf: '?'
        order:
            title: Root Type for order
            description: order entity
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                ordernr:
                    type: string
                rentaldate:
                    format: date
                    type: string
                returndate:
                    format: date
                    type: string
                UserId:
                    format: int32
                    type: integer
                createdAt:
                    format: date-time
                    type: string
                updatedAt:
                    format: date-time
                    type: string
                User:
                    type: object
                    properties:
                        id:
                            format: int32
                            type: integer
                        firstname:
                            type: string
                        lastname:
                            type: string
                        email:
                            type: string
                        password:
                            type: string
                        username:
                            type: string
                        phonenr:
                            type: string
                        createdAt:
                            format: date-time
                            type: string
                        updatedAt:
                            format: date-time
                            type: string
                OrderItems:
                    type: array
                    items:
                        type: object
                        properties:
                            id:
                                format: int32
                                type: integer
                            OrderId:
                                format: int32
                                type: integer
                            BookId:
                                format: int32
                                type: integer
                            createdAt:
                                format: date-time
                                type: string
                            updatedAt:
                                format: date-time
                                type: string
                            Book:
                                type: object
                                properties:
                                    id:
                                        format: int32
                                        type: integer
                                    title:
                                        type: string
                                    author:
                                        type: string
                                    description:
                                        type: string
                                    releasedate:
                                        format: date-time
                                        type: string
                                    booklength:
                                        format: int32
                                        type: integer
                                    language:
                                        type: string
                                    price:
                                        format: double
                                        type: number
                                    createdAt:
                                        format: date-time
                                        type: string
                                    updatedAt:
                                        format: date-time
                                        type: string
            example:
                id: 1
                ordernr: ORDER-213337
                rentaldate: '2023-10-24'
                returndate: '2023-10-29'
                UserId: 1
                createdAt: '2023-10-24T20:26:35.000Z'
                updatedAt: '2023-10-24T20:26:35.000Z'
                User:
                    id: 1
                    firstname: Jeff1
                    lastname: Bezos
                    email: jeffbezos@amazon.com
                    password: markzuckerbergsux
                    username: bigbezos420
                    phonenr: +1 11748794
                    createdAt: '2023-10-24T11:13:56.000Z'
                    updatedAt: '2023-10-24T11:13:56.000Z'
                OrderItems:
                    -
                        id: 1
                        OrderId: 1
                        BookId: 1
                        createdAt: '2023-10-24T20:26:35.000Z'
                        updatedAt: '2023-10-24T20:26:35.000Z'
                        Book:
                            id: 1
                            title: Among Us 1
                            author: William Shakespeare2
                            description: >-
                                Romeo and Juliet, play by William Shakespeare, written about 1594â€“96 and first
                                published in an unauthorized quarto in 1597. An authorized quarto appeared in
                                1599, substantially longer and more reliable.
                            releasedate: '1597-01-01T00:00:00.000Z'
                            booklength: 480
                            language: English
                            price: 5.99
                            createdAt: '2023-10-24T18:34:49.000Z'
                            updatedAt: '2023-10-24T18:34:49.000Z'
                    -
                        id: 2
                        OrderId: 1
                        BookId: 2
                        createdAt: '2023-10-24T20:26:35.000Z'
                        updatedAt: '2023-10-24T20:26:35.000Z'
                        Book:
                            id: 2
                            title: Among Us 2
                            author: William Shakespeare2
                            description: >-
                                Romeo and Juliet, play by William Shakespeare, written about 1594â€“96 and first
                                published in an unauthorized quarto in 1597. An authorized quarto appeared in
                                1599, substantially longer and more reliable.
                            releasedate: '1597-01-01T00:00:00.000Z'
                            booklength: 480
                            language: English
                            price: 5.99
                            createdAt: '2023-10-24T18:34:51.000Z'
                            updatedAt: '2023-10-24T18:34:51.000Z'
                    -
                        id: 3
                        OrderId: 1
                        BookId: 3
                        createdAt: '2023-10-24T20:26:35.000Z'
                        updatedAt: '2023-10-24T20:26:35.000Z'
                        Book:
                            id: 3
                            title: Among Us 3
                            author: William Shakespeare2
                            description: >-
                                Romeo and Juliet, play by William Shakespeare, written about 1594â€“96 and first
                                published in an unauthorized quarto in 1597. An authorized quarto appeared in
                                1599, substantially longer and more reliable.
                            releasedate: '1597-01-01T00:00:00.000Z'
                            booklength: 480
                            language: English
                            price: 5.99
                            createdAt: '2023-10-24T18:34:55.000Z'
                            updatedAt: '2023-10-24T18:34:55.000Z'
